# JWT partial data (after partial SHA) as BoundedVec
partial_data = {
    storage: [
        101u8, 121u8, 74u8, 48u8, 101u8, 88u8, 65u8, 105u8, 79u8, 105u8, 74u8, 75u8, 86u8, # Example JWT header
        # Filling remaining bytes with zeros up to 640
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8
    ],
    len: 640u32
}

# Partial SHA256 hash state (8 32-bit words)
partial_hash = [
    0x6a09e667,
    0xbb67ae85,
    0x3c6ef372,
    0xa54ff53a,
    0x510e527f,
    0x9b05688c,
    0x1f83d9ab,
    0x5be0cd19
]

# Full length of the JWT data before partial SHA
full_data_length = 1024

# Base64 decode offset for payload
base64_decode_offset = 2

# RSA public key modulus (2048-bit split into 18 128-bit limbs)
jwt_pubkey_modulus_limbs = [
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001
]

# RSA reduction parameters
jwt_pubkey_redc_params_limbs = [
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001
]

# RSA signature
jwt_signature_limbs = [
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001,
    0x00000000000000000000000000000001
]

# Domain name as BoundedVec (64 bytes, ASCII)
domain = {
    storage: [
        101u8, 120u8, 97u8, 109u8, 112u8, 108u8, 101u8, 46u8, 99u8, 111u8, 109u8, # "example.com"
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8,
        0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8, 0u8
    ],
    len: 11u32  # Length of "example.com"
}

# Ephemeral public key and parameters
ephemeral_pubkey = "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef"
ephemeral_pubkey_salt = "0xfedcba0987654321fedcba0987654321fedcba0987654321fedcba0987654321"
ephemeral_pubkey_expiry = 1735689600
